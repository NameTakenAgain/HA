- alias: "Motion -> Both lights on"
  trigger:
    - platform: state
      entity_id: sensor.motion_tvroom
      to: 'on'
    - platform: state
      entity_id: sensor.motion_dressingroom
      to: 'on'
    - platform: state
      entity_id: sensor.dressingroom_motion_2
      to: 'on'
  action:
    - service: homeassistant.turn_on 
      entity_id: script.both_lights_on_delayed_off

# This script is started when any motion sensor reverts to its off state
# It should only start the delayed turn off script when all sensors are off
- alias: "No Motion -> Both lights off, delayed"
  trigger:
    - platform: state
      entity_id: sensor.motion_tvroom
      to: 'off'
    - platform: state
      entity_id: sensor.motion_dressingroom
      to: 'off'
    - platform: state
      entity_id: sensor.dressingroom_motion_2
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ is_state("sensor.motion_dressingroom", "off") }}'
      - condition: template
        value_template: '{{ is_state("sensor.dressingroom_motion_2", "off") }}'
      - condition: template
        value_template: '{{ is_state("sensor.motion_tvroom", "off") }}'
  action:
    - service: homeassistant.turn_on 
      entity_id: script.both_lights_delayed_off
      
- alias: "TV on -> Lights off"
  trigger:
    - platform: state
      entity_id: sensor.current_activity
      to : 'BBTV'
    - platform: state
      entity_id: sensor.current_activity
      to : 'Shield'
  action:
    - service: homeassistant.turn_on 
      entity_id: script.both_lights_off

- alias: "TV off -> Lights on"
  trigger:
    - platform: state
      entity_id: sensor.current_activity
      to: 'PowerOff'
  action:
    - service: homeassistant.turn_on 
      entity_id: script.both_lights_on_delayed_off

- alias: "Time: Early morning"
  trigger:
    platform: time
    at: '06:00:00'
  action:
    - service: input_number.set_value
      data:
        entity_id: input_number.dressingroom_brightness
        value: 75
    - service: input_number.set_value
      data:
        entity_id: input_number.tvroom_brightness
        value: 90
        
- alias: "Time: Late morning"
  trigger:
    platform: time
    at: '08:00:00'
  action:
    - service: input_number.set_value
      data:
        entity_id: input_number.dressingroom_brightness
        value: 120
    - service: input_number.set_value
      data:
        entity_id: input_number.tvroom_brightness
        value: 120
        
- alias: "Time: Day time"
  trigger:
    platform: time
    at: '09:00:00'
  action:
    - service: input_number.set_value
      data:
        entity_id: input_number.dressingroom_brightness
        value: 150
    - service: input_number.set_value
      data:
        entity_id: input_number.tvroom_brightness
        value: 150

- alias: "Time: Night time"
  trigger:
    platform: time
    at: '23:30:00'
  action:
    - service: input_number.set_value
      data:
        entity_id: input_number.dressingroom_brightness
        value: 15
    - service: input_number.set_value
      data:
        entity_id: input_number.tvroom_brightness
        value: 30

- alias: "Hue remote TV room"
  trigger:
  - platform: state
    entity_id: sensor.tvroom_switch
  action:
  - service: python_script.hue_remote_tvroom
    
- alias: "Hue remote Dressing room"
  trigger:
  - platform: state
    entity_id: sensor.dressingroom_switch
  action:
  - service: python_script.hue_remote_dressingroom

- alias: "Livingroom ON"
  trigger:
    platform: sun
    event: sunset
  action:
    service: switch.turn_on
    entity_id:
      - "switch.sonoff0502"
      - "switch.sonoff4995"

- alias: "Livingroom OFF"
  trigger:
    platform: time
    at: '23:45:00'
  action:
    service: switch.turn_off
    entity_id:
      - "switch.sonoff0502"
      - "switch.sonoff4995"

- alias: "Sunset"
  trigger:
    platform: sun
    event: sunset
    offset: '-00:45:00'
  action:
    service: scene.turn_on
    entity_id:
      - scene.windows_on
      - scene.stairs_on

- alias: "Sunrise"
  trigger:
    platform: sun
    event: sunrise
    offset: '00:45:00'
  action:
    service: scene.turn_on
    entity_id:
      - scene.windows_off
